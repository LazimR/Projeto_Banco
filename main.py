# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'L-Bank.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtWidgets
from PyQt5.QtWidgets import QMessageBox, QApplication, QMainWindow
from classes import *
from tela_inicial import Ui_TelaLogin
from tela_cadastro import Ui_TelaCadastro
from tela_principal import Ui_TelaPrincipal

conta_atual = ''
aba_atual = None

class Ui_Main(QtWidgets.QWidget):
    def setupUi(self, Main):
        Main.setObjectName("Main")
        Main.resize(640, 480)
        
        self.QtStack = QtWidgets.QStackedLayout()

        self.stack0 = QtWidgets.QMainWindow()
        self.stack1 = QtWidgets.QMainWindow()
        self.stack2 = QtWidgets.QMainWindow()

        self.tela_principal = Ui_TelaPrincipal()
        self.tela_principal.setupUi(self.stack1)

        self.tela_login = Ui_TelaLogin()
        self.tela_login.setupUi(self.stack0)
        
        self.tela_cadastro = Ui_TelaCadastro()
        self.tela_cadastro.setupUi(self.stack2)

        self.QtStack.addWidget(self.stack0)
        self.QtStack.addWidget(self.stack1)
        self.QtStack.addWidget(self.stack2)




class Main(QMainWindow, Ui_Main):


    def __init__(self):
        super(Main, self).__init__(None)
        self.setupUi(self)

        self.b = Banco()

        self.tela_login.Login_button.clicked.connect(self.botao_login)
        self.tela_login.Cadastro_button.clicked.connect(self.abrirTelaCadastro)
        self.tela_login.Sair_Button.clicked.connect(self.finalizar)

        self.tela_cadastro.Cadastrar_button.clicked.connect(self.botao_cadastra)
        self.tela_cadastro.Voltar_button.clicked.connect(self.abrirTelaLogin)
        self.tela_cadastro.Sair_Button.clicked.connect(self.finalizar)

        self.tela_principal.Sair_Button.clicked.connect(self.finalizar)
        
        #Interações dos botões da Aba de opções

        self.tela_principal.Deposito_Button.clicked.connect(self.abre_AbaDeposito)
        self.tela_principal.Saque_Button.clicked.connect(self.abre_AbaSaque)
        self.tela_principal.Transf_Button_2.clicked.connect(self.abre_AbaTransf)
        self.tela_principal.Extrato_Button_2.clicked.connect(self.abre_AbaExtrato)
        self.tela_principal.Ocultar_Button.clicked.connect(self.mostra_Saldo)
        self.tela_principal.Logout_Button.clicked.connect(self.abrirTelaLogin)

        #Interações dos botões da Aba de saque
        self.tela_principal.Voltar_Button.clicked.connect(self.abre_AbaOpc)
        self.tela_principal.Sacar_Button.clicked.connect(self.botao_saque)

        #Interações dos botões da Aba de deposito
        self.tela_principal.Voltar_Button_2.clicked.connect(self.abre_AbaOpc)
        self.tela_principal.Depositar_Button.clicked.connect(self.botao_deposito)

        self.tela_principal.Voltar.clicked.connect(self.abre_AbaOpc)

        #Interações dos botões da Aba de transferência
        self.tela_principal.Voltar_Button_3.clicked.connect(self.abre_AbaOpc)
        self.tela_principal.Transf_Button.clicked.connect(self.botao_transf)
    
    def atualiza_tela_principal(self,l):             
        self.tela_principal.Mensagem_user.setText(f'Seja bem-vindo {(self.b.contas[l].get_titular).get_nome}  Nº{self.b.contas[l].get_numero}')
        self.tela_principal.Saldo_set.setText('******')

    def mostra_Saldo(self):
        if self.tela_principal.Saldo_set.text() == '******':
            self.tela_principal.Ocultar_Button.setStyleSheet("background-image: url(C:/Users/LazimR/Documents/GitHub/Projeto_Banco/imagens/olho_aberto.png);\n"
"background-repeat: no-repeat;\n"
"border-radius: 7px;\n"
"border-style:solid;\n"
"border-width:1px;\n"
"border-color:black;\n"
"")
            self.tela_principal.Saldo_set.setText(f'{self.b.contas[conta_atual].saldo}')
        else:
            self.tela_principal.Saldo_set.setText('******')
            self.tela_principal.Ocultar_Button.setStyleSheet("background-image: url(C:/Users/LazimR/Documents/GitHub/Projeto_Banco/imagens/olho_fechado.png);\n"
"background-repeat: no-repeat;\n"
"border-radius: 7px;\n"
"border-style:solid;\n"
"border-width:1px;\n"
"border-color:black;\n"
"")

    def abre_AbaOpc(self):
        global aba_atual
        if aba_atual == self.tela_principal.Frame_Saque:
            self.tela_principal.Frame_Saque.close()
            self.tela_principal.senhaLineEdit.setText('')
            self.tela_principal.ValorLineEdit.setText('')
            self.tela_principal.Frame_opc.show()
        
        elif aba_atual == self.tela_principal.Frame_deposito:
            self.tela_principal.Frame_deposito.close()
            self.tela_principal.ValorLineEdit_2.setText('')
            self.tela_principal.Frame_opc.show()
        
        elif aba_atual == self.tela_principal.Frame_extrato:
            self.tela_principal.Frame_extrato.close()
            self.tela_principal.Frame_opc.show()
        
        elif aba_atual == self.tela_principal.Frame_Transf:
            self.tela_principal.Frame_Transf.close()
            self.tela_principal.senhaLineEdit_2.setText('')
            self.tela_principal.ValorLineEdit_3.setText('')
            self.tela_principal.destinatarioLineEdit.setText('')
            self.tela_principal.Frame_opc.show()
        
        aba_atual = self.tela_principal.Frame_opc

    def abre_AbaDeposito(self):
        self.tela_principal.Frame_opc.close()
        self.tela_principal.Frame_deposito.show()
        global aba_atual
        aba_atual = self.tela_principal.Frame_deposito
    
    def abre_AbaSaque(self):
        self.tela_principal.Frame_opc.close()
        self.tela_principal.Frame_Saque.show()
        global aba_atual
        aba_atual = self.tela_principal.Frame_Saque

    def abre_AbaTransf(self):
        self.tela_principal.Frame_opc.close()
        self.tela_principal.Frame_Transf.show()
        global aba_atual
        aba_atual = self.tela_principal.Frame_Transf

    def abre_AbaExtrato(self):
        self.tela_principal.Frame_opc.close()
        self.tela_principal.Frame_extrato.show()
        self.tela_principal.Texto_extrato.setText((self.b.contas[conta_atual].get_historico).imprime())
        global aba_atual
        aba_atual = self.tela_principal.Frame_extrato

    def botao_saque(self):
        senha = self.tela_principal.senhaLineEdit.text()
        valor = self.tela_principal.ValorLineEdit.text()
        if not(senha == '' and valor == ''):
            if self.b.contas[conta_atual].saque(float(valor),senha):
                QMessageBox().information(None,'L-Bank','Saque feito com sucesso!')
                self.tela_principal.senhaLineEdit.setText('')
                self.tela_principal.ValorLineEdit.setText('')
                if not(self.tela_principal.Saldo_set.text() == '******'):
                    self.tela_principal.Saldo_set.setText(f'{self.b.contas[conta_atual].saldo}')
            else:
                QMessageBox().information(None,'L-Bank','Falha na operação!')
        else:
            QMessageBox().information(None,'L-Bank','Todos os dados devem ser preenchidos!')
    
    def botao_deposito(self):
        valor = self.tela_principal.ValorLineEdit_2.text()
        if not(valor == ''):
            if self.b.contas[conta_atual].deposita(float(valor)):
                QMessageBox().information(None,'L-Bank','Deposito feito com sucesso!')
                self.tela_principal.ValorLineEdit_2.setText('')
                if not(self.tela_principal.Saldo_set.text() == '******'):
                    self.tela_principal.Saldo_set.setText(f'{self.b.contas[conta_atual].saldo}')
            else:
                QMessageBox().information(None,'L-Bank','Falha na operação!')
        else:
            QMessageBox().information(None,'L-Bank','Todos os dados devem ser preenchidos!')

    def botao_transf(self):
        senha = self.tela_principal.senhaLineEdit_2.text()
        valor = self.tela_principal.ValorLineEdit_3.text()
        destino = self.tela_principal.destinatarioLineEdit.text()

        if not(senha == '' or valor == '' or destino == ''):
            if not(self.b.busca_conta(destino) == None):
                destino = self.b.busca_conta(destino)
                if self.b.contas[conta_atual].transfere(destino,float(valor),senha):
                    QMessageBox().information(None,'L-Bank','Transferência feita com sucesso!')
                    self.tela_principal.senhaLineEdit_2.setText('')
                    self.tela_principal.ValorLineEdit_3.setText('')
                    self.tela_principal.destinatarioLineEdit.setText('')
                    if not(self.tela_principal.Saldo_set.text() == '******'):
                        self.tela_principal.Saldo_set.setText(f'{self.b.contas[conta_atual].saldo}')
                else:
                    QMessageBox().information(None,'L-Bank','Falha na operação!')
            else:
                QMessageBox().information(None,'L-Bank','Conta não encontrada!')
        else:
            QMessageBox().information(None,'L-Bank','Todos os dados devem ser preenchidos!')


    def botao_cadastra(self):
        nome = self.tela_cadastro.Nome_line.text()
        cpf = self.tela_cadastro.Cpf_line.text()
        login = self.tela_cadastro.Login_line.text()
        senha = self.tela_cadastro.Senha_line.text()

        if not(nome == '' or senha == '' or cpf == '' or login == ''):
            c = Cliente(nome,cpf)

            cc = Conta(gera_numero(self.b),c,senha,login)
            if self.b.adiciona_cliente(c,cpf) and self.b.adiciona_conta(cc,login):
                QMessageBox().information(None,'L-Bank',f'Cadastro feito com sucesso!\nSeu número é {cc.get_numero}')
                self.tela_cadastro.Nome_line.setText('')
                self.tela_cadastro.Login_line.setText('')
                self.tela_cadastro.Cpf_line.setText('')
                self.tela_cadastro.Senha_line.setText('')
            else:
                QMessageBox().information(None,'L-Bank','Titular já possui cadastrado!')
                    
        else:
            QMessageBox().information(None,'L-Bank','Todos os dados devem ser preenchidos!')

    def botao_login(self):
        login = self.tela_login.Login_line.text()
        senha = self.tela_login.Senha_line.text()

        if not(login == '' or senha == ''):
            if confirma_login(login,senha,self.b):
                global conta_atual
                conta_atual = login
                self.abrirTelaPrincipal(login)
            else:
                QMessageBox().information(None,'L-Bank','Login/Senha incorreto!')    
        else:
            QMessageBox().information(None,'L-Bank','Todos os dados devem ser preenchidos!')


    def abrirTelaCadastro(self):
        self.QtStack.setCurrentIndex(2)
    
    def abrirTelaLogin(self):
        self.QtStack.setCurrentIndex(0)
        self.tela_principal.Frame_opc.show()
        
    
    def abrirTelaPrincipal(self,l):
        self.QtStack.setCurrentIndex(1)
        self.atualiza_tela_principal(l)
        self.tela_principal.Frame_deposito.close()
        self.tela_principal.Frame_Transf.close()
        self.tela_principal.Frame_extrato.close()
        self.tela_principal.Frame_Saque.close()
    
    def finalizar(self):
        sys.exit()

if __name__ == "__main__":
    import sys
    app = QApplication(sys.argv)
    show_main = Main()

    sys.exit(app.exec_())
